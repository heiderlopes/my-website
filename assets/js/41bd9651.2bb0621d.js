"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9063],{3052:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"gerenciamento-estado/exercicios/exercicio-todo-changenotifier","title":"Gerenciador de Tarefas com ChangeNotifier","description":"Enunciado","source":"@site/docs/flutter/02-gerenciamento-estado/exercicios/exercicio-todo-changenotifier.md","sourceDirName":"02-gerenciamento-estado/exercicios","slug":"/gerenciamento-estado/exercicios/exercicio-todo-changenotifier","permalink":"/my-website/flutter/gerenciamento-estado/exercicios/exercicio-todo-changenotifier","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"exercicio-todo-changenotifier","title":"Gerenciador de Tarefas com ChangeNotifier"},"sidebar":"flutterSidebar","previous":{"title":"Introdu\xe7\xe3o","permalink":"/my-website/flutter/intro"}}');var r=t(4848),i=t(8453);const o={id:"exercicio-todo-changenotifier",title:"Gerenciador de Tarefas com ChangeNotifier"},s=void 0,d={},l=[{value:"Enunciado",id:"enunciado",level:3},{value:"Requisitos",id:"requisitos",level:3},{value:"COMO RESOLVER?",id:"como-resolver",level:2},{value:"1. <code>task_controller.dart</code>",id:"1-task_controllerdart",level:3},{value:"2. <code>main.dart</code>",id:"2-maindart",level:3},{value:"3. <code>task_home_page.dart</code>",id:"3-task_home_pagedart",level:3}];function c(e){const n={code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"enunciado",children:"Enunciado"}),"\n",(0,r.jsx)(n.p,{children:"Crie um aplicativo Flutter que permita ao usu\xe1rio:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Adicionar novas tarefas."}),"\n",(0,r.jsx)(n.li,{children:"Remover tarefas individualmente."}),"\n",(0,r.jsx)(n.li,{children:"Limpar todas as tarefas."}),"\n",(0,r.jsxs)(n.li,{children:["Utilizar ",(0,r.jsx)(n.code,{children:"ChangeNotifier"})," para atualizar a interface ",(0,r.jsxs)(n.strong,{children:["sem utilizar ",(0,r.jsx)(n.code,{children:"Provider"})]}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"requisitos",children:"Requisitos"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Criar uma classe ",(0,r.jsx)(n.code,{children:"TaskController"})," que:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Estenda ",(0,r.jsx)(n.code,{children:"ChangeNotifier"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Contenha uma lista de tarefas."}),"\n",(0,r.jsxs)(n.li,{children:["Tenha m\xe9todos para:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Adicionar uma nova tarefa."}),"\n",(0,r.jsx)(n.li,{children:"Remover tarefa pelo \xedndice."}),"\n",(0,r.jsx)(n.li,{children:"Limpar todas as tarefas."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Utilize ",(0,r.jsx)(n.code,{children:"notifyListeners()"})," para notificar mudan\xe7as."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Na interface:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Um campo de texto para digitar o nome da tarefa."}),"\n",(0,r.jsx)(n.li,{children:"Um bot\xe3o para adicionar a tarefa."}),"\n",(0,r.jsx)(n.li,{children:"Uma lista exibindo as tarefas em tempo real."}),"\n",(0,r.jsx)(n.li,{children:"Um bot\xe3o ao lado de cada tarefa para remov\xea-la."}),"\n",(0,r.jsxs)(n.li,{children:["Um bot\xe3o na ",(0,r.jsx)(n.code,{children:"AppBar"})," para limpar todas as tarefas."]}),"\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"addListener()"})," no ",(0,r.jsx)(n.code,{children:"StatefulWidget"})," para atualizar a interface."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"como-resolver",children:"COMO RESOLVER?"}),"\n",(0,r.jsxs)(n.h3,{id:"1-task_controllerdart",children:["1. ",(0,r.jsx)(n.code,{children:"task_controller.dart"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"import 'package:flutter/material.dart';\n\nclass TaskController extends ChangeNotifier {\n  final List<String> _tasks = [];\n\n  List<String> get tasks => List.unmodifiable(_tasks);\n\n  void addTask(String task) {\n    if (task.trim().isNotEmpty) {\n      _tasks.add(task);\n      notifyListeners();\n    }\n  }\n\n  void removeTask(int index) {\n    _tasks.removeAt(index);\n    notifyListeners();\n  }\n\n  void clearTasks() {\n    _tasks.clear();\n    notifyListeners();\n  }\n}\n\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"2-maindart",children:["2. ",(0,r.jsx)(n.code,{children:"main.dart"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"import 'package:flutter/material.dart';\nimport 'task_controller.dart';\n\nvoid main() {\n  runApp(const TaskApp());\n}\n\nclass TaskApp extends StatelessWidget {\n  const TaskApp({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return const MaterialApp(\n      title: 'Task Manager',\n      home: TaskHomePage(),\n      debugShowCheckedModeBanner: false,\n    );\n  }\n}\n\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"3-task_home_pagedart",children:["3. ",(0,r.jsx)(n.code,{children:"task_home_page.dart"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"import 'package:flutter/material.dart';\nimport 'task_controller.dart';\n\nclass TaskHomePage extends StatefulWidget {\n  const TaskHomePage({super.key});\n\n  @override\n  State<TaskHomePage> createState() => _TaskHomePageState();\n}\n\nclass _TaskHomePageState extends State<TaskHomePage> {\n  final TextEditingController _textController = TextEditingController();\n  final TaskController _taskController = TaskController();\n\n  @override\n  void initState() {\n    super.initState();\n    _taskController.addListener(_onTasksChanged);\n  }\n\n  void _onTasksChanged() {\n    setState(() {});\n  }\n\n  @override\n  void dispose() {\n    _taskController.removeListener(_onTasksChanged);\n    _textController.dispose();\n    super.dispose();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: const Text('Gerenciador de Tarefas'),\n        actions: [\n          IconButton(\n            icon: const Icon(Icons.delete_forever),\n            onPressed: _taskController.clearTasks,\n          )\n        ],\n      ),\n      body: Padding(\n        padding: const EdgeInsets.all(16),\n        child: Column(\n          children: [\n            TextField(\n              controller: _textController,\n              decoration: const InputDecoration(\n                labelText: 'Digite uma nova tarefa',\n              ),\n              onSubmitted: (_) => _addTask(),\n            ),\n            const SizedBox(height: 10),\n            ElevatedButton(\n              onPressed: _addTask,\n              child: const Text('Adicionar'),\n            ),\n            const SizedBox(height: 20),\n            Expanded(\n              child: ListView.builder(\n                itemCount: _taskController.tasks.length,\n                itemBuilder: (context, index) {\n                  final task = _taskController.tasks[index];\n                  return ListTile(\n                    title: Text(task),\n                    trailing: IconButton(\n                      icon: const Icon(Icons.delete),\n                      onPressed: () => _taskController.removeTask(index),\n                    ),\n                  );\n                },\n              ),\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n\n  void _addTask() {\n    _taskController.addTask(_textController.text);\n    _textController.clear();\n  }\n}\n\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var a=t(6540);const r={},i=a.createContext(r);function o(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);